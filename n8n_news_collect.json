{
  "name": "각 군산",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=너는 뉴스 데이터 정제 전문가야.\n\n첫번째로, 네이버에서 '군산시청'과 관련된 오늘 날짜의 뉴스를 수집해서 최신날짜 기준으로 20개를 요약해줘.\n\n두번째로, 뉴스 장소(spot)는 뉴스 내용을 보고 아래 중 하나를 지정해줬으면 해. 만일 아래 중에 없다면 '군산시청'으로 지정해줘\n\n[\n\"옥구읍\",\n\"개정면\",\n\"나포면\",\n\"대야면\",\n\"서수면\",\n\"성산면\",\n\"옥도면\",\n\"옥산면\",\n\"옥서면\",\n\"임피면\",\n\"회현면\",\n\"개정동\",\n\"경암동\",\n\"구암동\",\n\"나운1동\",\n\"나운2동\",\n\"나운3동\",\n\"미성동\",\n\"삼학동\",\n\"소룡동\",\n\"수송동\",\n\"신풍동\",\n\"월명동\",\n\"조촌동\",\n\"중앙동\",\n\"해신동\",\n\"흥남동\",\n\"금강도서관\",\n\"시립도서관\",\n\"예술의전당\"\n]\n\n세번째로, 입력된 뉴스 목록을 바탕으로 각 기사의 '제목(title)', '날짜(date)', '원본 링크(link)', '요약(summary)', 그리고 '장소(spot)'를 리턴해줘",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a data processing API. Your sole purpose is to return data in a raw, pure JSON format. Do not use Markdown code fences like ```json or any other explanatory text. Your entire response must start with [ or {, and end with ] or }."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "cc0fad9b-37d7-4b77-9967-a7314d8350c3",
      "name": "AI Agent",
      "retryOnFail": true,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        220,
        260
      ],
      "id": "c1f7e908-fdbb-4365-9f6c-72f2e4f39558",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "rM5Iq9qhmEgiSuKK",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "네이버에서 '군산시청'과 관련된 뉴스를 가져온다",
        "url": "https://openapi.naver.com/v1/search/news.json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "군산시는"
            },
            {
              "name": "display",
              "value": "100"
            },
            {
              "name": "sort",
              "value": "date"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Naver-Client-Id",
              "value": "yycM5xJ1g6Wtrkpu_8mT"
            },
            {
              "name": "X-Naver-Client-Secret",
              "value": "e65r1Wzrg4"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        340,
        400
      ],
      "id": "2d386c90-5466-43f0-ad02-4055932f3998",
      "name": "GET NAVER News"
    },
    {
      "parameters": {
        "jsCode": "// 1. AI Agent의 결과물을 가져옵니다.\nconst rawOutput = $input.first().json.output;\n\n// 2. JSON이 시작하는 첫 '[', '{' 위치를 찾습니다.\nconst startIndex = Math.min(\n  rawOutput.indexOf('[') > -1 ? rawOutput.indexOf('[') : Infinity,\n  rawOutput.indexOf('{') > -1 ? rawOutput.indexOf('{') : Infinity\n);\n\n// 3. JSON이 끝나는 마지막 ']', '}' 위치를 찾습니다.\nconst endIndex = Math.max(\n  rawOutput.lastIndexOf(']'),\n  rawOutput.lastIndexOf('}')\n);\n\n// 4. 찾은 위치를 기준으로 순수한 JSON 텍스트만 잘라냅니다.\nconst jsonString = rawOutput.substring(startIndex, endIndex + 1);\n\n// 5. 깨끗하게 잘라낸 텍스트를 JSON 데이터로 변환합니다.\nconst parsedData = JSON.parse(jsonString);\n\n// 6. 데이터가 {\"output\": [배열]} 형태로 감싸져 있을 경우, 안의 배열을 꺼냅니다.\nlet finalData = Array.isArray(parsedData) ? parsedData : parsedData.output;\n\n// 만약 finalData가 정의되지 않았다면(AI 출력이 예상과 완전히 다를 경우) 에러를 방지하기 위해 빈 배열로 설정합니다.\nif (finalData === undefined) {\n    finalData = [];\n}\n\n// 7. 최종 데이터를 다음 노드로 전달합니다.\n//    배열을 그대로 반환하여 각 뉴스 기사가 별개의 아이템이 되도록 합니다.\nreturn finalData;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        0
      ],
      "id": "909e2a0d-e4a8-4268-a119-f74c78b38bf8",
      "name": "Parsing News Result"
    },
    {
      "parameters": {
        "tableId": "gunsan_news",
        "dataToSend": "autoMapInputData"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        800,
        0
      ],
      "id": "d1b0b6e1-9d1c-436b-aa88-9e2429e0d527",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "qnWMi2J4u4COuG5a",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## 네이버 뉴스 자동화 \n** 네이버 검색 API 로 뉴스 불러옴",
        "height": 680,
        "width": 1100
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -60,
        -100
      ],
      "id": "ec5e48ef-f06e-4dd0-9d74-f9f1b819c162",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 20
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -20,
        0
      ],
      "id": "b1fcc2e0-b1fc-463f-bfe7-751ab254fded",
      "name": "8:00 뉴스 수집"
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Parsing News Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET NAVER News": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Parsing News Result": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "8:00 뉴스 수집": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "e1caaf6c-3477-4c04-877e-b9bf407488e9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c7339c84744bddbb00770030df0089a2db235a744d4f598abfae4b44ab9d8703"
  },
  "id": "SHNzxZpMfaujlzGM",
  "tags": []
}